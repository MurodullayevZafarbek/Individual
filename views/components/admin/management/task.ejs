<style>
    #GENERAL_DATE,
    #ADMIN_TASK,
    #MENTOR_TASK,
    #SELLER_TASK {
        display: none;
    }

    .designSelection {
        /* background-color: #6d21b4; */
        background: #dc2424;
        background: -webkit-linear-gradient(to right, #dc2424, #4a569d);
        background: linear-gradient(to right, #dc2424, #4a569d);
        padding: 20px 15px;
        border-radius: 10px;
        color: white;
    }
</style>

<div class="row">
    <div class="col-12">
        <div class="row col md-12 col-sm-12 d-flex justify-content-between align-items-center">

            <div class="row">
                <div class="col-12">
                    <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                        <h3 class="mb-sm-0">Topshiriqlar bo'limi</h3>
                        <div class="page-title-right">
                            <ol class="breadcrumb m-0">
                                <li class="breadcrumb-item"><a href="/admin/dashboard/general">Asosiy sahifa</a></li>
                                <li class="breadcrumb-item active">Topshiriqlar</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12 col-sm-12 mt-1">
                <button type="button" class=" col-md-2 col-sm-12 btn btn-warning" data-bs-toggle="offcanvas"
                    data-bs-target="#ACTIVES" aria-controls="ACTIVES">
                    <i class=" fas fa-filter"></i> Faol topshiriqlar
                </button>
                <button type="button" class=" col-md-2 col-sm-12 btn btn-dark" data-bs-toggle="offcanvas"
                    data-bs-target="#ARCHIVE" aria-controls="ARCHIVE">
                    <i class="fas fa-archive"></i> Arxiv topshiriqlar
                </button>
            </div>
        </div>
        <div class="card mt-3">
            <div class="card-body">
                <table class="table table-striped table-bordered dt-responsive wrap text-center"
                    style="border-collapse: collapse; border-spacing: 0; width:  100%">
                    <thead>
                        <tr>
                            <th>Vazifa</th>
                            <th>Komentariya</th>
                            <th>Fayllar</th>
                            <th>Topshiriq boshlanishi</th>
                            <th>Topshiriq yakunlanishi</th>
                            <th>Sana</th>
                            <th>Sozlama</th>
                        </tr>
                    </thead>
                    <tbody class="setTables"></tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<!-- Aktiv topshiriqlarni olish -->
<div class="offcanvas offcanvas-end" style="width: 50%" tabindex="-1" id="ACTIVES">
    <div class="offcanvas-header">
        <h5 class="font-size-22 mt-3 p-2 badge bg-dark">Faol topshiriqlarni kuzatish</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body ">
        <div class="col-md-12 col-sm-12 mt-2">
            <label style="color: #000;" class="col-md-12 col-sm-12 form-label">O'quv markazni tanlang</label>
            <select id="filtering_schools_ACTIVES" class="col-md-12 col-sm-12 form-control select2"></select>
        </div>
        <div class="col-md-12 col-sm-12 mt-3">
            <button onclick="FILTER_ACTIVES()" type="button" class="col-md-12 col-sm-12 btn btn-primary">Izlash</button>
        </div>

    </div>
</div>
<!-- Archive topshiriqlarni olish -->
<div class="offcanvas offcanvas-end" style="width: 50%" tabindex="-1" id="ARCHIVE">
    <div class="offcanvas-header">
        <h5 class="font-size-22 mt-3 p-2 badge bg-dark">Arxiv topshiriqlarni kuzatish</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body ">
        <div class="col-md-12 col-sm-12 mt-2">
            <label style="color: #000;" class="col-md-12 col-sm-12 form-label">O'quv markazni tanlang</label>
            <select id="filtering_schools_ARCHIVES" class="col-md-12 col-sm-12 form-control select2"></select>
        </div>
        <div class="col-md-12 col-sm-12 mt-3">
            <button onclick="FILTER_ARCHIVES()" type="button"
                class="col-md-12 col-sm-12 btn btn-primary">Izlash</button>
        </div>

    </div>
</div>

<!-- Vazifani uchun komentariya yuklash -->
<div class="offcanvas offcanvas-end" style="width: 60%" tabindex="-1" id="MAKE_COMMENT">
    <div class="offcanvas-header">
        <h5 class="font-size-22 mt-3 p-2 badge bg-dark">Vazifa uchun komentariya berish</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body taskDemo">

    </div>
</div>


<!-- Vazifani uchun komentariya yuklash -->
<div class="offcanvas offcanvas-end" style="width: 60%" tabindex="-1" id="MAKE_FILE">
    <div class="offcanvas-header">
        <h5 class="font-size-22 mt-3 p-2 badge bg-dark">Vazifa uchun file yuklash</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body taskFile">

    </div>
</div>


<div id="COMMENT" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="font-size-20 mt-3 p-1 badge bg-dark">Topshiriq kuzatish</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body getDocs">

            </div>
        </div>
    </div>
</div>


<script src="/assets/axios.min.js"></script>
<script src="/assets/jquery.min.js"></script>
<script src="/assets/notification.js"></script>

<script>
    const setSelectionSingle = async (DATA, APPENDING, MESSAGE) => {
        if (DATA == "") {
            const appends = $(APPENDING);
            await appends.html("");
            appends.append(`<option value="" selected>Mavjud emas</option> `);
            danger(MESSAGE);
        } else {
            const appends = $(APPENDING);
            await appends.html("");
            appends.append(`<option value="" selected>Tanlash</option> `);
            DATA.forEach((item) => {
                appends.append(
                    `<option value="${item._id}">${item.name}</option>`
                );
            });
        }
    }
    const setSelectionMultiple = async (DATA, APPENDING, MESSAGE) => {
        if (DATA == "") {
            const appends = $(APPENDING);
            await appends.html("");
            danger(MESSAGE);
        } else {
            const appends = $(APPENDING);
            await appends.html("");
            DATA.forEach((item) => {
                appends.append(
                    `<option value="${item._id}">${item.name}</option>`
                );
            });
        }
    }
    /* 
        @description: Managerga oid o'quv markazlarni olish
        @api: /api/user/decode
        @method: GET
    */
    const UserToken = window.localStorage.getItem('user')
    let userID;
    let schoolID;
    axios.get('/api/user/decode', { headers: { authorization: UserToken } }).then((res) => {
        const id = res.data.id;
        userID = id
        axios.get(`/api/user/${id}`).then(async (res) => {
            const school = res.data.data.school;
            setSelectionSingle(school, "#filtering_schools_ACTIVES", "Iltimos yangi o'quv markazi yarating")
            setSelectionSingle(school, "#filtering_schools_ARCHIVES", "Iltimos yangi o'quv markazi yarating")
        })
    })


    /* 
       @description: Xodim o'ziga tegishli vazifalarni olish
       @api: /api/task_main/staff
       @method: GET
    */

    const setHTML = async (DATA, APPENDING, MESSAGE, check) => {
        if (DATA == "") {
            const appends = $(APPENDING);
            await appends.html("");
            danger(MESSAGE);
        } else {
            const appends = $(APPENDING);
            await appends.html("");
            DATA.forEach((item, index) => {
                appends.append(`
                    <tr>  
                        <td>${item.task}</td>
                        <td>
                            <span onclick="TASK_CHILD('${item._id}', 'comment')" style="cursor: pointer;" class="badge bg-primary text-light color-light font-size-12 p-2"  data-bs-toggle="modal" data-bs-target="#COMMENT" >
                                <i class="fa fa-eye"> </i> Ko'rish
                            </span>
                        </td>
                        <td>
                            <span onclick="TASK_CHILD('${item._id}', 'file')" style="cursor: pointer;" class="badge bg-primary text-light color-light font-size-12 p-2" style="cursor: pointer;" class="badge bg-primary text-light color-light font-size-12 p-2"  data-bs-toggle="modal" data-bs-target="#COMMENT" >
                                <i class="fa fa-eye"> </i> Ko'rish
                            </span>
                        </td>
                        <td> <span style="cursor: pointer;" class="badge bg-dark text-light color-light font-size-12 p-2"> ${new Date(item.startDate).toLocaleDateString()} </span> </td>
                        <td>  <span style="cursor: pointer;" class="badge bg-dark text-light color-light font-size-12 p-2">   ${new Date(item.endDate).toLocaleDateString()}  </span>  </td>
                        <td>${new Date(item.createdAt).toLocaleDateString()}</td>
                        <td class="checkActions"></td>
                    </tr>
                `);
                const checkActions = document.getElementsByClassName("checkActions");
                checkActions.forEach((inputs, inputsIndex) => {
                    if (inputsIndex == index) {
                        if (check == "active") {
                            inputs.innerHTML = `
                                <button data-bs-toggle="offcanvas"  data-bs-target="#MAKE_COMMENT" aria-controls="MAKE_COMMENT" style="padding: 6px 10px 5px 10px;" onclick="makeComment('${item._id}')" type="button" class="btn btn-dark" >
                                    <i class="far fa-comment-alt font-size-16"></i>
                                </button>
                                <button data-bs-toggle="offcanvas"  data-bs-target="#MAKE_FILE" aria-controls="MAKE_FILE" style="padding: 6px 10px 5px 10px;" onclick="makeFile('${item._id}')" type="button" class="btn btn-dark" >
                                    <i class="far fa-file-archive font-size-16"></i>
                                </button>
                            `
                        }
                        if (check == "archive") {
                            inputs.innerHTML = `🔐`
                        }
                    }
                })
            });
        }
    }
    const FILTER_ACTIVES = () => {
        const school = document.getElementById("filtering_schools_ACTIVES").value;
        if (school == "") { danger("Ma'lumotni to'liq kiriting") }
        else {
            axios.get('/api/task_main/staff', { params: { school: school, actions: "active", status: "admin", members: userID, } }).then((res) => {
                const data = res.data.data;
                schoolID = school
                setHTML(data, ".setTables", "Ma'lumot to'pilmadi", "active")
            })
        }
    }
    const FILTER_ARCHIVES = () => {
        const school = document.getElementById("filtering_schools_ARCHIVES").value;
        if (school == "") {
            danger("Ma'lumotni to'liq kiriting")
        }
        else {
            axios.get('/api/task_main/staff', { params: { school: school, actions: "archive", status: "admin", members: userID, } }).then((res) => {
                const data = res.data.data;
                schoolID = school
                setHTML(data, ".setTables", "Ma'lumot to'pilmadi", "archive")
            })
        }
    }

    const makeComment = (id) => {
        axios.get('/api/task_child/staff', { params: { school: schoolID, members: userID, task: id } }).then(async (res) => {
            const data = res.data.data; // task_child;
            const taskDemo = $('.taskDemo')
            await taskDemo.html("")
            taskDemo.append(`
                <p id="addnew pt-3">
                    <a class="badge bg-primary font-size-14 mt-3 p-2" href="javascript:new_link()">
                        <i class="far fa-plus-square"></i> Vazifa haqida komentariya qo'shish
                    </a>
                </p>
                <div id="newlinktpl" style="display: none">
                    <textarea cols="20" rows="5" class="form-control mt-3 school_description"></textarea>
                </div>
                <div id="newlink" class="mt-3"></div>
                <button type="button" onclick="saveDescription('${data[0]._id}')" class="btn btn-success waves-effect waves-light mt-1 col-md-12 col-sm-12">Tahrirlash</button>
            `)
            if (data[0].status == "1") {
                axios.put(`/api/task_child/contexts/${data[0]._id}`, { status: "2" }).then((res) => {
                    success("Vazifa qabul qilindi")
                })
            }
        })
    }
    const makeFile = (id) => {
        axios.get('/api/task_child/staff', { params: { school: schoolID, members: userID, task: id } }).then(async (res) => {
            const data = res.data.data; // task_child;
            const taskFile = $('.taskFile')
            await taskFile.html("")
            taskFile.append(`
                <label class="mb-1">Fayl yuklash</label>
                <input type="file" class="form-control" multiple="multiple" id="staffFile">
                <button type="button" onclick="saveFiles('${data[0]._id}')" class="btn btn-success waves-effect waves-light mt-3 col-md-12 col-sm-12">Tahrirlash</button>
            `)
            if (data[0].status == "1") {
                axios.put(`/api/task_child/contexts/${data[0]._id}`, { status: "2" }).then((res) => {
                    success("Vazifa qabul qilindi")
                })
            }
        })
    }

    let ct = 1;
    function new_link() {
        ct++;
        let div1 = document.createElement('div');
        div1.id = ct
        let delLink = '<a class="badge bg-danger p-1 font-size-12 mt-1 p-2" href="javascript:delIt(' + ct + ')">O\'\chirish</a></div>'

        div1.innerHTML = document.getElementById('newlinktpl').innerHTML + delLink;
        document.getElementById('newlink').appendChild(div1);
    }
    function delIt(eleId) {
        d = document;
        let ele = d.getElementById(eleId);
        let parentEle = d.getElementById('newlink');
        parentEle.removeChild(ele);
    }

    /* 
       @description: Vazifa haqida kometariya qoldirish
       @api: /api/task_child/contexts/:id
       @method: PUT
    */
    const saveDescription = (id) => {
        const staffDescription = document.querySelectorAll('.school_description')
        const array_description = [];
        for (let i = 1; i < staffDescription.length; i++) {
            array_description.push(staffDescription[i].value)
        }
        if (array_description == "") {
            warning("Malumotni to'liq kiriitng")
        }
        else {
            axios({ url: `/api/task_child/contexts/${id}`, method: "PUT", data: { comment: array_description } }).then((res) => {
                success("Komentariya qo'shildi")
            })
            axios.put(`/api/task_child/contexts/${id}`, { status: "3" })
        }
    }
    /*
       @description: Vazifa boyicha file yuklash
       @api: /api/task_child/documents/:id
       @method: PUT
    */
    const saveFiles = (id) => {
        const formData = new FormData();

        const staff_files_0 = document.getElementById('staffFile').files[0]
        const staff_files_1 = document.getElementById('staffFile').files[1]
        const staff_files_2 = document.getElementById('staffFile').files[2]
        const staff_files_3 = document.getElementById('staffFile').files[3]
        const staff_files_4 = document.getElementById('staffFile').files[4]
        const staff_files_5 = document.getElementById('staffFile').files[5]
        const staff_files_6 = document.getElementById('staffFile').files[6]
        const staff_files_7 = document.getElementById('staffFile').files[7]
        const staff_files_8 = document.getElementById('staffFile').files[8]
        const staff_files_9 = document.getElementById('staffFile').files[9]
        const staff_files_10 = document.getElementById('staffFile').files[10]
        const staff_files_11 = document.getElementById('staffFile').files[11]

        formData.append("documents", staff_files_0)
        formData.append("documents", staff_files_1)
        formData.append("documents", staff_files_2)
        formData.append("documents", staff_files_3)
        formData.append("documents", staff_files_4)
        formData.append("documents", staff_files_5)
        formData.append("documents", staff_files_6)
        formData.append("documents", staff_files_7)
        formData.append("documents", staff_files_8)
        formData.append("documents", staff_files_9)
        formData.append("documents", staff_files_10)
        formData.append("documents", staff_files_11)

        if (staff_files_0 == "" || !staff_files_0 || staff_files_0 == undefined) {
            warning("Vazifa uchun fayl yuklang")
        }
        else {
            axios({
                url: `/api/task_child/documents/${id}`,
                method: "PUT",
                data: formData,
                headers: {
                    'Content-Type': 'multipart/form-data'
                }
            }).then((res) => {
                success("Vazifa uchun fayl yuklandi")
            });
            axios.put(`/api/task_child/contexts/${id}`, { status: "3" })
        }
    }




    /*
        @description: Komentariya va fayllarni ko'rish
        @api: /api/task_child/:id
        @method: GET
     */
    const TASK_CHILD = (id, keys) => {
        axios.get('/api/task_child/staff', { params: { school: schoolID, members: userID, task: id } }).then(async (res) => {
            
            if (keys == "file") {
                const documents = res.data.data[0].documents
                const appends = $(".getDocs")
                await appends.html("");
                if (documents == "") {
                    appends.append(`
                        <a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
                            <div class="d-flex w-100 justify-content-center align-items-center">
                                <h5 style="font-weight: 900; color: red;">Fayl mavjud emas</h5>
                            </div>
                        </a>
                    `);
                } else {
                    documents.forEach((item, index) => {
                        appends.append(`
                        <a download="${item}" href="/documents/${item}"  class=" badge bg-primary font-size-16 p-2 mb-2 col-md-10 col-sm-10 offset-1"> <i class="fas fa-cloud-download-alt"></i> Yuklash</a>
                    `);
                    })
                }
            }


            if (keys == "comment") {
                const comment = res.data.data[0].comment
                const appends = $(".getDocs")
                await appends.html("");
                if (comment == "") {
                    appends.append(`
                        <a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
                            <div class="d-flex w-100 justify-content-center align-items-center">
                                <h5 style="font-weight: 900; color: red;">Koment mavjud emas</h5>
                            </div>
                        </a>
                    `);
                } else {
                    comment.forEach((item, index) => {
                        appends.append(`
                        <a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
                            <div style="display: flex; flex-direction: column;">
                                <h6 style="font-weight: 900;">${index += 1} - komentariya: </h6>
                                <h6 >${item}</h6>
                            </div>
                        </a>
                    `);
                    })
                }
            }


        })
    }


</script>