<div class="row">
    <div class="col-12">
        <div class="row">
            <div class="col-12">
                <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                    <h3 class="mb-sm-0">Tushumlar (kirim) bo'limi</h3>

                    <div class="page-title-right">
                        <ol class="breadcrumb m-0">
                            <li class="breadcrumb-item"><a href="/manager/dashboard/general">Asosiy sahifa</a></li>
                            <li class="breadcrumb-item active">Tushumlar</li>
                        </ol>
                    </div>

                </div>
            </div>
        </div>
        <div class="row col md-12 col-sm-12 d-flex justify-content-start align-items-center">

            <button class="btn btn-success col-md-2 " type="button" data-bs-toggle="offcanvas" data-bs-target="#CRETAE"
                style="border-radius: 0; margin-left: 10px;" aria-controls="CRETAE">
                To'lov qilish
            </button>
            <button onclick="check_filter_school('school')" class="btn btn-outline-primary  col-md-2"
                data-bs-toggle="offcanvas" style="border-radius: 0;" data-bs-target="#FILTER_GENERAL"
                aria-controls="FILTER">Filial bo'yicha</button>
            <button onclick="check_filter_school('group')" class="btn btn-outline-primary col-md-2"
                data-bs-toggle="offcanvas" style="border-radius: 0;" data-bs-target="#FILTER_GROUP"
                aria-controls="FILTER_GROUP">Guruhlar bo'yicha</button>
            <button onclick="check_filter_school('category_speciality')" class="btn btn-outline-primary col-md-3"
                data-bs-toggle="offcanvas" style="border-radius: 0;" data-bs-target="#FILTER_CATEGORY_SPECIALITY"
                aria-controls="FILTER_CATEGORY_SPECIALITY">Yo'nalish va kurs bo'yicha</button>
            <div class="mt-2"
                style="width: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-between;">
                <input type="text" class="form-control col-md-8" style="border-radius: 0; width: 90%;"
                    placeholder="O'quvchiga oid barcha malumotlar bo'yicha izlashingiz mumkin ..." />
                <button onclick="search_by_name()" class="btn btn-danger"
                    style="border-radius: 0; width: 10%;">Izlash</button>
            </div>

        </div>
        <div class="card mt-3">
            <div class="card-body">
                <table class="table table-striped table-bordered dt-responsive wrap text-center"
                    style="border-collapse: collapse; border-spacing: 0; width:  100%">
                    <thead>
                        <tr>
                            <th>O'quvchi</th>
                            <th>Guruh</th>
                            <th>Qaysi oy uchun</th>
                            <th>Status</th>
                            <th>To'langan</th>
                            <th>Qarzdorlik</th>
                            <th>To'langan sana</th>
                            <th>Sozlama</th>
                        </tr>
                    </thead>
                    <tbody class="put_tables">

                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<!-- Malumot yaratish -->
<div class="offcanvas offcanvas-end" style="width: 50%" tabindex="-1" id="CRETAE">
    <div class="offcanvas-header">
        <h5 class="font-size-22 mt-3 p-2 pl-5 pr-5 badge bg-dark">Yangi to'lov yaratish</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body ">
        <div class="row">
            <div class="col-md-12">
                <label class="form-label">O'quv markazni tanlang</label>
                <select class="form-control select2" onchange="FILTER_SCHOOL(this.value)" id="SCHOOL"></select>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-md-12">
                <label class="form-label">Guruhni tanlang</label>
                <select class="form-control select2" onchange="FILTER_GROUP(this.value)" id="GROUP"></select>
            </div>
        </div>

        <div class="row mt-2">
            <div class="col-md-12">
                <label class="form-label mt-2">O'quvchini tanlang</label>
                <select class="form-control select2" id="STUDENT"></select>
            </div>
        </div>
        <div class="row col-md-12 mt-2">
            <div class="col-md-6 col-sm-12">
                <label class="form-label mt-2">Oyni tanlang</label>
                <select class="form-control select2 col-md-12 col-sm-12" id="MONTH">
                    <option value="">Tanlang</option>
                    <option value="1">Yanvar</option>
                    <option value="2">Fevral</option>
                    <option value="3">Mart</option>
                    <option value="4">Aprel</option>
                    <option value="5">May</option>
                    <option value="6">Iyun</option>
                    <option value="7">Iyul</option>
                    <option value="8">Avgust</option>
                    <option value="9">Sentyabr</option>
                    <option value="10">Oktyabr</option>
                    <option value="11">Noyabr</option>
                    <option value="12">Dekabr</option>
                </select>
            </div>
            <div class="col-md-6 col-sm-12">
                <label class="form-label mt-2">Yilni tanlang</label>
                <select class="form-control select2 col-md-12 col-sm-12" id="YEAR">
                    <option value="">Tanlang</option>
                    <option value="2022">2022</option>
                    <option value="2023">2023</option>
                    <option value="2024">2024</option>
                    <option value="2025">2025</option>
                </select>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-md-12">
                <label class="form-label mt-2">To'lov turi</label>
                <select class="form-control select2" id="PAYMENT_SYSTEM">
                    <option value="">Tanlang</option>
                    <option value="account_number">Hisob raqami orqali</option>
                    <option value="cash">Naqd pul orqali</option>
                    <option value="card">Plastik karta orqali</option>
                </select>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-md-12">
                <label class="form-label mt-2">Summa</label>
                <input id="input-repeat" class="form-control input-mask"
                    data-inputmask="'mask': '9', 'repeat': 10, 'greedy' : false">
            </div>
        </div>


        <div class="row">
            <div class="col-md-12 mt-2">
                <label class="form-label mt-2" id="CATEGORY_title">Guruhning yo'nalishga tegishli: <span
                        class="badge bg-danger p-1 font-size-14">Mavjud emas</span></label>
                <input type="hidden" class="form-control" id="CATEGORY">
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <label class="form-label mt-2" id="SPECIALITY_title">Guruh qaysi kursga tegishli: <span
                        class="badge bg-danger p-1 font-size-14">Mavjud emas</span> </label>
                <input type="hidden" class="form-control" id="SPECIALITY">
            </div>
        </div>

        <div class="row mt-2">
            <div class="col-md-12">
                <button type="button" onclick="Payment()" class="col-md-12 btn btn-primary waves-effect waves-light">
                    To'lovni amalga oshirish
                </button>
            </div>
        </div>
    </div>
</div>
<!-- Umumiy filtlash -->
<div class="offcanvas offcanvas-end" style="width: 50%" tabindex="-1" id="FILTER_GENERAL">
    <div class="offcanvas-header">
        <h5 class="font-size-22 mt-3 p-2 pl-5 pr-5 badge bg-dark">O'quv markazlar bo'yicha filtrlash</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div class="row">
            <div class="col-md-12">
                <label class="form-label">O'quv markazni tanlang</label>
                <select class="form-control select2" id="SCHOOL_general"></select>
            </div>
        </div>
        <div class="col-md-12 col-sm-12">
            <label class="form-label mt-2">Oyni tanlang</label>
            <select class="select2 form-control select2-multiple col-md-12 col-sm-12" multiple="multiple"
                id="MONTH_general">
                <option value="1">Yanvar</option>
                <option value="2">Fevral</option>
                <option value="3">Mart</option>
                <option value="4">Aprel</option>
                <option value="5">May</option>
                <option value="6">Iyun</option>
                <option value="7">Iyul</option>
                <option value="8">Avgust</option>
                <option value="9">Sentyabr</option>
                <option value="10">Oktyabr</option>
                <option value="11">Noyabr</option>
                <option value="12">Dekabr</option>
            </select>
        </div>
        <div class="col-md-12 col-sm-12">
            <label class="form-label mt-2">Yilni tanlang</label>
            <select class="form-control select2 col-md-12 col-sm-12" id="YEAR_general">
                <option value="">Tanlang</option>
                <option value="2022">2022</option>
                <option value="2023">2023</option>
                <option value="2024">2024</option>
                <option value="2025">2025</option>
            </select>
        </div>
        <div class="row mt-3">
            <div class="col-md-12">
                <button type="button" onclick="GENERAL_FILTERING('school')"
                    class="col-md-12 btn btn-primary waves-effect waves-light">
                    Izlash
                </button>
            </div>
        </div>


    </div>
</div>
<!-- Guruh boyicha filtlash -->
<div class="offcanvas offcanvas-end" style="width: 50%" tabindex="-1" id="FILTER_GROUP">
    <div class="offcanvas-header">
        <h5 class="font-size-22 mt-3 p-2 pl-5 pr-5 badge bg-dark">Guruhlar bo'yicha filtrlash</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">

        <div class="row">
            <div class="col-md-12">
                <label class="form-label">O'quv markazni tanlang</label>
                <select class="form-control select2" onchange="FILTER_by_SCHOOL(this.value)"
                    id="SCHOOL_filtering"></select>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-md-12">
                <label class="form-label">Guruhni tanlang</label>
                <select class="select2 form-control select2-multiple col-md-12 col-sm-12" multiple="multiple"
                    id="GROUP_filtering"></select>
            </div>
        </div>

        <div class="col-md-12 col-sm-12">
            <label class="form-label mt-2">Oyni tanlang</label>
            <select class="select2 form-control select2-multiple col-md-12 col-sm-12" multiple="multiple"
                id="MONTH_filtering">
                <option value="1">Yanvar</option>
                <option value="2">Fevral</option>
                <option value="3">Mart</option>
                <option value="4">Aprel</option>
                <option value="5">May</option>
                <option value="6">Iyun</option>
                <option value="7">Iyul</option>
                <option value="8">Avgust</option>
                <option value="9">Sentyabr</option>
                <option value="10">Oktyabr</option>
                <option value="11">Noyabr</option>
                <option value="12">Dekabr</option>
            </select>
        </div>
        <div class="col-md-12 col-sm-12">
            <label class="form-label mt-2">Yilni tanlang</label>
            <select class="form-control select2 col-md-12 col-sm-12" id="YEAR_filtering">
                <option value="">Tanlang</option>
                <option value="2022">2022</option>
                <option value="2023">2023</option>
                <option value="2024">2024</option>
                <option value="2025">2025</option>
            </select>
        </div>
        <div class="row mt-3">
            <div class="col-md-12">
                <button type="button" onclick="GROUP_FILTERING('group')"
                    class="col-md-12 btn btn-primary waves-effect waves-light">
                    Izlash
                </button>
            </div>
        </div>


    </div>
</div>
<!-- Kategoriya va yo'nalish boyicha filtlash -->
<div class="offcanvas offcanvas-end" style="width: 50%" tabindex="-1" id="FILTER_CATEGORY_SPECIALITY">
    <div class="offcanvas-header">
        <h5 class="font-size-22 mt-3 p-2 pl-5 pr-5 badge bg-dark">Yo'nalish va kurslar bo'yicha filtrlash</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">

        <div class="row">
            <div class="col-md-12">
                <label class="form-label">O'quv markazni tanlang</label>
                <select class="form-control select2" onchange="FILTER_SCHOOLS(this.value)"
                    id="SCHOOL_filtered"></select>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <label class="form-label mt-2">Kategoriya nomi</label>
                <select class="form-control select2" onchange="FILTER_CATEGORIES(this.value)"
                    id="CATEGORY_filtered"></select>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <label class="form-label mt-2">Yo'nalish nomi</label>
                <select class="form-control select2" id="SPECIALITY_filtered"></select>
            </div>
        </div>


        <div class="col-md-12 col-sm-12">
            <label class="form-label mt-2">Oyni tanlang</label>
            <select class="select2 form-control select2-multiple col-md-12 col-sm-12" multiple="multiple"
                id="MONTH_filtered">
                <option value="1">Yanvar</option>
                <option value="2">Fevral</option>
                <option value="3">Mart</option>
                <option value="4">Aprel</option>
                <option value="5">May</option>
                <option value="6">Iyun</option>
                <option value="7">Iyul</option>
                <option value="8">Avgust</option>
                <option value="9">Sentyabr</option>
                <option value="10">Oktyabr</option>
                <option value="11">Noyabr</option>
                <option value="12">Dekabr</option>
            </select>
        </div>
        <div class="col-md-12 col-sm-12">
            <label class="form-label mt-2">Yilni tanlang</label>
            <select class="form-control select2 col-md-12 col-sm-12" id="YEAR_filtered">
                <option value="">Tanlang</option>
                <option value="2022">2022</option>
                <option value="2023">2023</option>
                <option value="2024">2024</option>
                <option value="2025">2025</option>
            </select>
        </div>
        <div class="row mt-3">
            <div class="col-md-12">
                <button type="button" onclick="CATEGORY_SPECIALITY_FILTERED('category_speciality')"
                    class="col-md-12 btn btn-primary waves-effect waves-light">
                    Izlash
                </button>
            </div>
        </div>


    </div>
</div>
<!-- Tahrirlash -->
<div class="offcanvas offcanvas-end" style="width: 50%" tabindex="-1" id="UPDATE_INCOME">
    <div class="offcanvas-header">
        <h5 class="font-size-22 mt-3 p-2 pl-5 pr-5 badge bg-dark">Qayta to'lov qilish</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body updateIncome">
    </div>
</div>


<!-- Moliyaviy holatni ko'rish -->
<div class="offcanvas offcanvas-end" style="width: 100%; background-color: #ffffffe0;" tabindex="-1" id="CATEGORY_USER">
    <div class="offcanvas-header">
        <h5 class="font-size-22 mt-3 p-2 badge bg-dark">Moliyaviy holatni statistikasi</h5>
        <h5 id="showTotolStudentCount" class="font-size-20 mt-3 p-2 badge bg-warning"></h5>
        <button type="button" class="btn btn-danger " style="color: white; font-weight: 700;"
            data-bs-dismiss="offcanvas" aria-label="Close">
            Yopish
        </button>
    </div>
    <div class="offcanvas-body">

        <div class="row">
            <div class="col-md-3 col-sm-12">
                <select class="col-sm-12 col-md-12 select2 form-control" id="filials_all"> </select>
            </div>
            <div class="col-md-3 col-sm-12">
                <select class="col-sm-12 col-md-12 select2 form-control" id="SPECIALITY_LIST"> </select>
            </div>

            <div class="col-md-3 col-sm-12">
                <button type="button" class="btn btn-success col-sm-12 col-md-12" onclick="filterAllUser()">
                    Ma'lumotni izlash
                </button>
            </div>
        </div>

        <div class="row mt-5 getDatass">

        </div>
    </div>
</div>



<script src="/assets/axios.min.js"></script>
<script src="/assets/jquery.min.js"></script>
<script src="/assets/notification.js"></script>
<!-- Form mask -->
<script src="/assets/libs/inputmask/jquery.inputmask.min.js"></script>
<script src="/assets/js/pages/form-mask.init.js"></script>

<script>

    const returnID = (item) => {
        return document.getElementById(item)
    }
    let checkFilter;
    const check_filter_school = (check) => {
        return checkFilter = check
    }

    /* 
        @description: Managerning tokeni orqali unga tegishli o'quv markazlarni hammasini olish
        @api: /api/user/decode
        @method: GET
    */
    const setSelections = async (DATA, APPENDING, MESSAGE) => {
        if (DATA == "") {
            const appends = $(APPENDING);
            await appends.html("");
            appends.append(`<option value="" selected>Mavjud emas</option> `);
            danger(MESSAGE);
        }
        else {
            const appends = $(APPENDING);
            await appends.html("");
            appends.append(`<option value="" selected>Tanlash</option> `);
            DATA.forEach((item) => {
                appends.append(
                    `<option value="${item._id}">${item.name}</option>`
                );
            });
        }
    }
    const UserToken = window.localStorage.getItem('user')
    axios.get('/api/user/decode', { headers: { authorization: UserToken } }).then((res) => {
        const id = res.data.id;
        axios.get(`/api/user/${id}`).then(async (res) => {
            const school = res.data.data.school
            setSelections(school, "#SCHOOL", "Iltimos yangi o'quv markazi yarating")
            setSelections(school, "#general_filter_SCHOOL", "Iltimos yangi o'quv markazi yarating")
            setSelections(school, "#SCHOOL_general", "Iltimos yangi o'quv markazi yarating")
            setSelections(school, "#SCHOOL_filtering", "Iltimos yangi o'quv markazi yarating")
            setSelections(school, "#SCHOOL_filtered", "Iltimos yangi o'quv markazi yarating")
            setSelections(school, "#filials_all", "Iltimos yangi o'quv markazi yarating")
        })
    })
    /* 
        @description: O'quv markazga tegishli kategoriyalarni va guruhlarni olish
        @api: /api/school/:id
        @method: GET
    */
    const FILTER_SCHOOL = (id) => {
        axios.get(`/api/group/filter/${id}`, { params: { actions: "active" } }).then(async (res) => {
            const data = res.data.data
            setSelections(data, "#GROUP", "O'quv markazga tegishli guruhlar mavjud emas. Iltimos guruh biriktiring")

        });
        axios.get(`/api/school/${id}`).then(async (res) => {
            const data = res.data.data.category
            setSelections(data, "#CATEGORY", "O'quv markazi uchun kategoriyalar biriktirilmagan. Iltimos kategoriya biriktiring")
        });
    }
    const FILTER_SCHOOLS = (id) => {
        axios.get(`/api/school/${id}`).then(async (res) => {
            const data = res.data.data.category
            setSelections(data, "#CATEGORY_filtered", "O'quv markazi uchun kategoriyalar biriktirilmagan. Iltimos kategoriya biriktiring")
        });
    }
    const FILTER_by_SCHOOL = (id) => {
        axios.get(`/api/group/filter/${id}`, { params: { actions: "active" } }).then(async (res) => {
            const DATA = res.data.data
            if (DATA == "") {
                const appends = $("#GROUP_filtering");
                await appends.html("");
                danger("O'quv markazga tegishli guruhlar mavjud emas. Iltimos guruh biriktiring");
            } else {
                const appends = $("#GROUP_filtering");
                await appends.html("");
                DATA.forEach((item) => {
                    appends.append(
                        `<option value="${item._id}">${item.name}</option>`
                    );
                });
            }
        });

    }
    /* 
        @description: Kategoriya boyicha yonlaishlarni filtrlash
        @api: /api/speciality/filter/:id
        @method: GET
    */
    const FILTER_CATEGORIES = (id) => {
        axios.get(`/api/speciality/filter/${id}`, { params: { actions: "active" } }).then(async (res) => {
            const data = res.data.data
            setSelections(data, "#SPECIALITY_filtered", "Ushbu kategoriya bo'yicha yo'nalish mavjud emas")
        });
    }
    /* 
        @description: Guruh boyicha o'quvchilarni olish
        @api: /api/group/filter_by_group
        @method: GET
    */
    const FILTER_GROUP = (id) => {
        axios.get(`/api/user/filter_by_group`, { params: { group: id, role: "student", actions: "active" } }).then(async (res) => {
            const data = res.data.data
            setSelections(data, "#STUDENT", "Guruh bo'yicha o'quvchilar mavjud emas. Iltimos ushbu guruh uchun o'quvchi qo'shing !")
        });

        axios.get(`/api/group/${id}`).then(async (res) => {
            const category = res.data.data.category
            const speciality = res.data.data.speciality

            document.getElementById("CATEGORY").value = category._id
            document.getElementById("SPECIALITY").value = speciality._id

            document.getElementById("CATEGORY_title").innerHTML = `Guruhning yo'nalish turi: <span class="badge bg-success font-size-14 p-1">${category.name}</span>`
            document.getElementById("SPECIALITY_title").innerHTML = `Qaysi kursga aloqador: <span class="badge bg-success font-size-14 p-1" >${speciality.name}</span>`


        });
    }
    /* 
        @description: To'lov qilish
        @api: /api/income/create
        @method: GET
    */
    const Payment = () => {
        const SCHOOL = document.getElementById('SCHOOL').value
        const CATEGORY = document.getElementById('CATEGORY').value
        const SPECIALITY = document.getElementById('SPECIALITY').value
        const GROUP = document.getElementById('GROUP').value
        const STUDENT = document.getElementById('STUDENT').value
        const MONTH = document.getElementById('MONTH').value
        const YEAR = document.getElementById('YEAR').value
        const PAYMENT_SYSTEM = document.getElementById('PAYMENT_SYSTEM').value
        const SUMMA = document.getElementById('input-repeat').value

        if (SCHOOL == "" || GROUP == "" || STUDENT == "" || MONTH == "" || YEAR == "" || PAYMENT_SYSTEM == "" || CATEGORY == "" || SPECIALITY == "" || SUMMA == "") {
            danger("Ma'lumotlarni to'liq kiriting")
        } else {
            axios.post("/api/income/create", {
                school: SCHOOL,
                category: CATEGORY,
                speciality: SPECIALITY,
                group: GROUP,
                user: STUDENT,
                month: MONTH,
                year: YEAR,
                payment_type: "1",
                payment_system: PAYMENT_SYSTEM,
                amount: SUMMA,
            })
                .then((res) => {
                    const data = res.data;
                    if (data.message == "Current 2 dates aren't defined") {
                        warning("To'lovni qilishdan oldin avval o'quvchilar bo'limidan ushbu o'quvchi uchun to'lov qilishi kerak bo'gan aniq sanalarni kiriting")
                    }
                    if (data.message == "Before payed") {
                        if (data.month == "1") warning(`${data.year} yil yanvar oyi uchun to'lov amalga oshirilgan`)
                        if (data.month == "2") warning(`${data.year} yil fevral oyi uchun to'lov amalga oshirilgan`)
                        if (data.month == "3") warning(`${data.year} yil mart oyi uchun to'lov amalga oshirilgan`)
                        if (data.month == "4") warning(`${data.year} yil aprel oyi uchun to'lov amalga oshirilgan`)
                        if (data.month == "5") warning(`${data.year} yil may oyi uchun to'lov amalga oshirilgan`)
                        if (data.month == "6") warning(`${data.year} yil iyun oyi uchun to'lov amalga oshirilgan`)
                        if (data.month == "7") warning(`${data.year} yil iyul oyi uchun to'lov amalga oshirilgan`)
                        if (data.month == "8") warning(`${data.year} yil avgust oyi uchun to'lov amalga oshirilgan`)
                        if (data.month == "9") warning(`${data.year} yil sentyabr oyi uchun to'lov amalga oshirilgan`)
                        if (data.month == "10") warning(`${data.year} yil oktyabr oyi uchun to'lov amalga oshirilgan`)
                        if (data.month == "11") warning(`${data.year} yil noyabr oyi uchun to'lov amalga oshirilgan`)
                        if (data.month == "12") warning(`${data.year} yil dekabr oyi uchun to'lov amalga oshirilgan`)
                    }
                    if (data.message == "Payment is more") {
                        warning(`Kiritilgan to'lov juda ham ko'p. Miqdor ${data.needPay} so'mdan oshmasligi kerak`)
                    }
                    if (data.message == "Not existed") {
                        danger("Ushbu OY va YIL to'lov qilish mumkin emas.Muddatni qaytadan tekshiring.")
                    }
                    if (data.message == "Success") {
                        success("To'lov muvaffaqiyatli amalga oshirildi")
                    }
                })

        }
    }
    /*
        @description: Umumiy filtrlash
        @api: /api/income/filter
        @method: GET
    */
    const setHTML = async (data) => {
        const element = $('.put_tables');
        await element.html("")
        data.forEach((item, index) => {
            element.append(`
                <tr>
                    <td>${item.user.name}</td>
                    <td>${item.group.name}</td>
                    <td class="getMonths"></td>
                    <td class="getStatus"></td>
                    <td><span class="badge bg-success font-size-14 p-2">${item.amount}</span></td>
                    <td class="debtors"></td>
                    <td>${new Date(item.createdAt).toLocaleDateString()}</td>
                    <td>
                        <div class="btn-group">
                            <button style="padding: 5px 9px; font-size: 16px;" type="button" class="btn btn-dark dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-cog"></i>
                            </button>
                            <div class="dropdown-menu">
                                <a onclick="updateIncome('${item._id}')" data-bs-toggle="offcanvas" data-bs-target="#UPDATE_INCOME" aria-controls="UPDATE_INCOME" class="dropdown-item" href="#"><i class="fas fa-exchange-alt"></i> Qayta to'lov qilish </a>
                                <a onclick="deleteIncome('${item._id}', '${item.user._id}', '${item.month}', '${item.year}', '${item.status}')" class="dropdown-item text-danger" href="#"><i class=" fas fa-times"></i> To'lovni qaytarish  </a>
                            </div>
                        </div>
                    </td>
                </tr>
            `)
            const month = document.getElementsByClassName("getMonths");
            month.forEach((inputs, inputsIndex) => {
                if (inputsIndex == index) {
                    if (item.month == "1") {
                        inputs.innerHTML = `<span class="badge bg-secondary text-light font-size-14 p-2">Yanvar - ${item.year}</span>`
                    }
                    if (item.month == "2") {
                        inputs.innerHTML = `<span class="badge bg-secondary text-light font-size-14 p-2">Fevral - ${item.year}</span>`
                    }
                    if (item.month == "3") {
                        inputs.innerHTML = `<span class="badge bg-secondary text-light font-size-14 p-2">Mart - ${item.year}</span>`
                    }
                    if (item.month == "4") {
                        inputs.innerHTML = `<span class="badge bg-secondary text-light font-size-14 p-2">Aprel - ${item.year}</span>`
                    }
                    if (item.month == "5") {
                        inputs.innerHTML = `<span class="badge bg-secondary text-light font-size-14 p-2">May - ${item.year}</span>`
                    }
                    if (item.month == "6") {
                        inputs.innerHTML = `<span class="badge bg-secondary text-light font-size-14 p-2">Iyun - ${item.year}</span>`
                    }
                    if (item.month == "7") {
                        inputs.innerHTML = `<span class="badge bg-secondary text-light font-size-14 p-2">Iyul - ${item.year}</span>`
                    }
                    if (item.month == "8") {
                        inputs.innerHTML = `<span class="badge bg-secondary text-light font-size-14 p-2">Avgust - ${item.year}</span>`
                    }
                    if (item.month == "9") {
                        inputs.innerHTML = `<span class="badge bg-secondary text-light font-size-14 p-2">Sentyabr - ${item.year}</span>`
                    }
                    if (item.month == "10") {
                        inputs.innerHTML = `<span class="badge bg-secondary text-light font-size-14 p-2">Oktyabr - ${item.year}</span>`
                    }
                    if (item.month == "11") {
                        inputs.innerHTML = `<span class="badge bg-secondary text-light font-size-14 p-2">Noyabr - ${item.year}</span>`
                    }
                    if (item.month == "12") {
                        inputs.innerHTML = `<span class="badge bg-secondary text-light font-size-14 p-2">Dekabr - ${item.year}</span>`
                    }

                }
            })
            const debtors = document.getElementsByClassName("debtors");
            debtors.forEach((inputs, inputsIndex) => {
                if (inputsIndex == index) {
                    if (typeof item.reminderSumm == "undefined" || !item.reminderSumm || item.reminderSumm == "0") {
                        inputs.innerHTML = " - "
                    } else {
                        inputs.innerHTML = `<span class=" badge bg-danger font-size-14 p-2">${item.reminderSumm}</span>`
                    }
                }
            })
            const status = document.getElementsByClassName("getStatus");
            status.forEach((inputs, inputsIndex) => {
                if (inputsIndex == index) {
                    if (item.status == "debtor") {
                        inputs.innerHTML = `<span class="badge bg-danger font-size-14 p-2">Qarzdor</span>`
                    }
                    if (item.status == "no_debtor") {
                        inputs.innerHTML = `<span class="badge bg-success font-size-14 p-2">Qarzdor emas</span>`
                    }
                }
            })
        })
    }
    let deleteCheck
    const restart = (check) => {
        if (check == "school") {
            GENERAL_FILTERING("school")
        }
        if (check == "group") {
            GROUP_FILTERING("group")
        }
        if (check == "category_speciality") {
            CATEGORY_SPECIALITY_FILTERED("category_speciality")
        }
    }

    const GENERAL_FILTERING = async (check) => {
        if (check == "school") {
            deleteCheck = "school"
            const school = returnID("SCHOOL_general").value
            const month = returnID("MONTH_general")
            const year = returnID("YEAR_general").value
            const months = []
            for (const item of month) {
                if (item.selected) {
                    months.push(item.value)
                }
            }
            if (school == "" || months == "" || year == "") {
                danger("Ma'lumotlarni to'liq kiriting")
            }
            else {
                axios.get('/api/income/filter', {
                    params: {
                        check: check,
                        school: school,
                        month: months,
                        year: year
                    }
                }).then(async (res) => {
                    const data = res.data.data;
                    console.log(data);

                    if (data == "") {
                        const element = $('.put_tables');
                        await element.html("")
                        element.append("")
                        warning("Hech qanday malumot topilmadi")
                    }
                    else {
                        setHTML(data)
                    }

                })
            }
        }
    }
    const GROUP_FILTERING = async (check) => {
        if (check == "group") {
            deleteCheck = "group"
            const containArray = (element) => {
                const arrayDemo = []
                for (const item of element) {
                    if (item.selected) {
                        arrayDemo.push(item.value)
                    }
                }
                return arrayDemo
            }
            const school = returnID("SCHOOL_filtering").value
            const group = returnID("GROUP_filtering")
            const month = returnID("MONTH_filtering")
            const year = returnID("YEAR_filtering").value
            if (school == "" || containArray(group) == "" || containArray(month) == "" || year == "") {
                danger("Ma'lumotlarni to'liq kiriting")
            }
            else {
                axios.get('/api/income/filter', {
                    params: {
                        check: check,
                        school: school,
                        group: containArray(group),
                        month: containArray(month),
                        year: year
                    }
                }).then(async (res) => {

                    const data = res.data.data;
                    if (data == "") {
                        const element = $('.put_tables');
                        await element.html("")
                        element.append("")
                        warning("Hech qanday malumot topilmadi")
                    }
                    else {
                        setHTML(data)
                    }
                })
            }
        }
    }
    const CATEGORY_SPECIALITY_FILTERED = async (check) => {
        if (check == "category_speciality") {
            deleteCheck = "category_speciality"
            const containArray = (element) => {
                const arrayDemo = []
                for (const item of element) {
                    if (item.selected) {
                        arrayDemo.push(item.value)
                    }
                }
                return arrayDemo
            }
            const school = returnID("SCHOOL_filtered").value;
            const category = returnID("CATEGORY_filtered").value;
            const speciality = returnID("SPECIALITY_filtered").value;
            const month = returnID("MONTH_filtered");
            const year = returnID("YEAR_filtered").value;
            if (school == "" || category == "" || speciality == "" || containArray(month) == "" || year == "") {
                danger("Ma'lumotlarni to'liq kiriting")
            }
            else {
                axios.get('/api/income/filter', {
                    params: {
                        check: check,
                        school: school,
                        category: category,
                        speciality: speciality,
                        month: containArray(month),
                        year: year
                    }
                }).then(async (res) => {
                    const data = res.data.data;
                    if (data == "") {
                        const element = $('.put_tables');
                        await element.html("")
                        element.append("")
                        warning("Hech qanday malumot topilmadi")
                    }
                    else {
                        setHTML(data)
                    }
                })
            }
        }
    }
    /*
        @description: Umumiy filtrlash
        @api: /api/income/filter
        @method: PUT
    */
    const updateIncome = (id) => {
        axios.get(`/api/income/${id}`).then(async (res) => {
            const data = res.data.data;
            const element = $(".updateIncome");
            await element.html("");
            element.append(`
           <div class="row">
            <div class="col-md-12">
                <label class="form-label" for="input-repeat">To'lovni qayta kiriting</label>
                        <input type="number" id="inputElement" class="form-control" onkeyup="checkData('${data.reminderSumm}', ${data.amount})" />
                        <span id="remindElem" class="badge bg-warning font-size-14 p-1 mt-1"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <button type="button" onclick="updateSum('${data._id}')" class=" mt-3 btn btn-success waves-effect waves-light mt-2">
                            Tahrirlash
                        </button> 
                    </div>
                </div>
            `);
            if (typeof data.reminderSumm == undefined || !data.reminderSumm || data.reminderSumm == "0") {
                returnID('remindElem').innerHTML = `To'lanishi kerak bo'lgan summa: 0 so'm`
            } else {
                returnID('remindElem').innerHTML = `To'lanishi kerak bo'lgan summa: ${data.reminderSumm} so'm`

            }
        })
    }
    const checkData = (a, b) => {
        const typing = parseInt(returnID('inputElement').value);
        const reminder = parseInt(a)
        const paid = parseInt(b)

        if (typing > reminder) {
            danger(`Iltimos kiritayotgan to'lovingiz ${reminder} so'mdan oshmasligi kerak`)
            returnID('inputElement').value = ""
        }
    }
    const updateSum = (id) => {
        const inputs = returnID('inputElement').value;
        if (inputs == "") {
            danger("Malumotni to'liq kiriting")
        } else {
            axios.put(`/api/income/${id}`, {
                summa: inputs
            }).then((res) => {
                const message = res.data.message;

                if (message == "Payed totally") {
                    danger("Ushbu oy uchun bu guruhga oylik to'lov to'liq amalga")
                }
                if (message == "Your payment is more than current payment") {
                    danger("Aniq summadan ortiq to'lamang")
                }
                if (message == "Success") {
                    success("To'lov muvaffaqiyatli amalga oshirildi")
                    setTimeout(() => {
                        window.location.reload()
                    }, 1200)
                }
            })
        }

    }
    /*
        @description: To'lovni o'chirish
        @api: /api/income/:id
        @method: DELETE
    */
    const deleteIncome = (incomeID, userID, month, year, status) => {
        axios.delete(`/api/income/${incomeID}`, {
            params: {
                user: userID,
                month: month,
                year: year,
                status: status
            }
        }).then((res) => {
            const status = res.data.success

            if (status == true) {
                success("Mavjud to'lov qaytarib berildi")
                setTimeout(() => {
                    window.location.reload()
                }, 1200)
            }
            else {
                warning("To'lovni qaytarishdan oldin avval o'quvchilar bo'limidan ushbu o'quvchi uchun to'lov qilishi kerak bo'gan aniq sanalarni kiriting")
            }


        })
    }




</script>